---
kind: pipeline
name: editor

steps:
- name: lint
  image: node:lts-slim
  commands:
  - cd editor
  - npm ci
  - npm run lint

- name: build static release
  image: node:lts-slim
  commands:
  - cd editor
  - cp -R .build/static/** .
  - npm ci
  - npm run build
- name: git configure static fork
  image: alpine/git
  environment:
    DEPLOY_KEY:
      from_secret: GITHUB_STATIC_KEY
  commands:
  - echo $DEPLOY_KEY > ~/.ssh/id_rsa
  - mkdir /drone/src/.pages_tmp
  - git clone -b gh-pages --single-branch git@github.com:anoff/devradar-static.git /drone/src/.pages_tmp
  - rsync --delete --exclude .git --exclude CNAME -r /drone/src/editor/dist /drone/src/.pages_tmp
  - cd /drone/src/.pages_tmp
  - git status --porcelain
  - git add .
  - git push origin HEAD:gh-pages 
- name: publish release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: GITHUB_TOKEN
    files: dist/*
    checksum:
      - md5
    prerelease: true
  when:
    event:
    - tag
- name: push to devradar-static
  image: plugins/gh-pages
  settings:
    username:
      from_secret: GITHUB_USERNAME
    password:
      from_secret: GITHUB_TOKEN
    pages_directory: editor/dist
    upstream_name: static

- name: build editor.devradar.io
  image: node:lts-slim
  commands:
  - cd editor
  - cp -R .build/editor/** .
  - npm ci
  - npm run build
- name: deploy editor.devradar.io
  image: node:lts-alpine
  environment:
    NETLIFY_SITE_ID:
      from_secret: NETLIFY_EDITOR_ID
    NETLIFY_AUTH_TOKEN:
      from_secret: NETLIFY_TOKEN
  commands:
    - cd editor
    - npm install -g netlify-cli
    - netlify deploy --dir=dist --prod
  when:
    branch:
    - master
    event:
    - push
- name: docker publish editor
  image: plugins/docker
  settings:
    username:
      from_secret: DOCKER_USERNAME
    password:
      from_secret: DOCKER_PASSWORD
    repo: anoff/devradar
    target: editor
    tags: latest
    dockerfile: editor/Dockerfile
    context: editor/
  when:
    branch:
    - master
    event:
    - push

- name: build & deploy radar.anoff.io
  image: node:lts-slim
  environment:
    FIREBASE_PROJECT:
      from_secret: FIREBASE_PROJECT
    FIREBASE_TOKEN:
      from_secret: FIREBASE_TOKEN
  commands:
  - cd editor
  - npm ci
  - cp -R .build/anoff/** .
  - npm run build
  - npm i -g firebase-tools
  - firebase deploy --token "$FIREBASE_TOKEN" --project $FIREBASE_PROJECT
  when:
    branch:
    - master
    event:
    - push

---
kind: pipeline
name: teams

steps:
- name: lint
  image: node:lts-slim
  commands:
  - cd teams
  - npm ci
  - npm run lint
- name: build
  image: node:lts-slim
  commands:
  - cd teams
  - npm ci
  - npm run build
- name: netlify deploy
  image: node:lts-alpine
  environment:
    NETLIFY_SITE_ID:
      from_secret: NETLIFY_TEAMS_ID
    NETLIFY_AUTH_TOKEN:
      from_secret: NETLIFY_TOKEN
  commands:
    - cd teams
    - npm install -g netlify-cli
    - netlify deploy --dir=dist --prod
  when:
    branch:
    - master
    event:
    - push

---
kind: pipeline
name: web

steps:
- name: build
  image: anoff/hugo-asciidoctor
  commands:
  - cd web
  - hugo --gc --minify -d _site --baseURL //devradar.io
  - touch _site/.nojekyll
- name: publish  
  image: plugins/gh-pages
  settings:
    username:
      from_secret: github_username
    password:
      from_secret: github_token
    pages_directory: web/_site
  when:
    branch:
    - master
    event:
    - push